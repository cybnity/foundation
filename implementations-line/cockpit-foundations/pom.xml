<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.cybnity</groupId>
		<artifactId>components</artifactId>
		<version>${revision}</version>
		<relativePath>..</relativePath>
	</parent>

	<groupId>org.cybnity</groupId>
	<artifactId>cockpit-foundations-impl</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>
	<name>CYBNITY COCKPITS FOUNDATIONS</name>
	<modules>
		<module>capability-framework</module>
		<module>actions-scheduling</module>
		<!--
		<module>assets-perimeters-protection</module>
		<module>automation</module>
		<module>awareness-training</module>
		<module>behaviours-situations-anticipation-control</module>
		<module>operations-cartography</module>
		<module>coordination</module>
		<module>dashboard-threshold</module>
		<module>defensive-maneuvers</module>
		<module>defensive-responses-controls</module>
		<module>goals-evidences</module>
		<module>isms-strategy</module>
		<module>operational-excellence</module>
		<module>operational-recovery</module>
		<module>missions-programming</module>
		<module>skpi</module>
		<module>stakeholders-responsibilities</module>
		<module>standards-compliances</module>
		<module>commandment</module>
		<module>threats-risks-prevention-treatment</module>
		<module>vulnerabilities-prevention-treatment</module>-->
		<module>reactive-messaging-gateway</module>
		<module>web-reactive-frontend</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.cybnity.framework</groupId>
				<artifactId>support</artifactId>
				<scope>compile</scope>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>org.cybnity.framework</groupId>
				<artifactId>vertx-common</artifactId>
				<version>${revision}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.cybnity.framework</groupId>
				<artifactId>domain</artifactId>
				<version>${revision}</version>
				<scope>compile</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.cybnity.framework</groupId>
			<artifactId>support</artifactId>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- Base configuration of shader creating mixed classes packages into only one artifact -->
					<artifactId>maven-shade-plugin</artifactId>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<transformers>
									<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
										<manifestEntries>
											<Main-Class>${launcher.class}</Main-Class>
											<Main-Verticle>${main.verticle}</Main-Verticle>
										</manifestEntries>
									</transformer>
									<transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
									<transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer" />
									<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								</transformers>
								<createDependencyReducePom>false</createDependencyReducePom>
								<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<!-- Base configuration of launcher of Vert.x application -->
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<configuration>
						<mainClass>${launcher.class}</mainClass>
						<arguments>
							<argument>run</argument>
							<argument>${main.verticle}</argument>
						</arguments>
					</configuration>
				</plugin>

				<plugin>
					<!-- @Requirement(reqType = RequirementCategory.Maintainability, reqId = "REQ_MAIN_1") -->
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<configuration>
						<images>
							<!-- Create an in-memory Dockerfile, copies over the assembled files and calls the Docker daemon via its remote API -->
							<image>
								<!-- Unique docker repository name including registry and tag parts -->
								<name>cybnity/%a</name>
								<alias>%a</alias>
								<build>
									<!-- The CYBNITY JRE container standard base image (Trusted Execution Environment) extended -->
									<from>${docker.java.tee.image.name}</from>
									<maintainer>CYBNITY Core Team</maintainer>
									<cleanup>try</cleanup>
									<noCache />
									<tags>
										<!-- Additional tags which an image is to be tagged after the build -->
										<tag>${revision}${docker.images.tag.suffix}</tag>
									</tags>
									<labels>
										<version>${project.version}</version>
										<artifactId>${project.artifactId}</artifactId>
									</labels>
									<assembly>
										<!-- Attach projectâ€™s artifact (its dependencies are embedded into the shaded jar) -->
										<descriptor>shaded-artifact-docker-assembly.xml</descriptor>
										<targetDir>/opt/cybnity</targetDir>
										<mode>dir</mode>
									</assembly>
								</build>
							</image>
						</images>
						<outputDirectory>target/docker</outputDirectory>
						<sourceDirectory>src/main/docker</sourceDirectory>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
