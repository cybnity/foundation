# Default values for reactive-messaging-gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cybnity/reactive-messaging-gateway
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# Application environment variable configuration regarding a dedicated image runtime
env:
  # Java application environment variables that are logically used by the applicative module
  # via the AppConfigurationVariable enumerations
  - name: "REACTIVE_BACKEND_ENDPOINT_HTTP_SERVER_PORT"
    value: "8080"
  # via the ReadModelConfigurationVariable enumerations
  - name: "REDIS_READMODEL_SERVER_HOST"
    value: "localhost"
  - name: "REDIS_READMODEL_SERVER_PORT"
    value: "6379"
  - name: "REDIS_READMODEL_CONNECTION_DEFAULT_AUTH_PASSWORD"
    value: "1gEGHneiLT"
  - name: "REDIS_READMODEL_DATABASE_NUMBER"
    value: "2"
  - name: "REDIS_READMODEL_CONNECTION_DEFAULT_USERACCOUNT"
    value: "default"
  # via the WriteModelConfigurationVariable enumerations
  - name: "REDIS_WRITEMODEL_SERVER_HOST"
    value: "localhost"
  - name: "REDIS_WRITEMODEL_SERVER_PORT"
    value: "6379"
  - name: "REDIS_WRITEMODEL_CONNECTION_DEFAULT_AUTH_PASSWORD"
    value: "1gEGHneiLT"
  - name: "REDIS_WRITEMODEL_DATABASE_NUMBER"
    value: "1"
  - name: "REDIS_WRITEMODEL_CONNECTION_DEFAULT_USERACCOUNT"
    value: "default"

imagePullSecrets: []
# Overriding the Helm chart name ensures configuration files also change
nameOverride: "reactive-backend-server"
fullnameOverride: "reactive-backend-server-chart"

# Service account name (provide an identity for process that run in a Pod; by default named 'default') in the namespace for the Helm chart generates when the cluster is runned
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "cybnity-backend-system"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

deployment:
  imageHealthCheckPort: 8080
  imageHealthCheckInitialDelaySeconds: 60
  imageHealthCheckPeriodSeconds: 300
  imageHttpHealthLivenessProbe: /static/health.html
  imageHttpHealthReadinessProbe: /static/health.html

service:
  # Networking service type (e.g ClusterIP; NodePort is recommended for Minikube). See https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types for more detail
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
