# Mandatory automatic build of java components before to manage a pull request
# that allow to detect valid compilation before to merge source codes via a pull request effort by a reviewer

name: Maven CI

run-name: Unit testing & quality verification

on:
  push:
    # execution when commit is pushed by a developer of a feature
    branches:
      - 'feature*'
      - 'hotfix*'
      - 'fix*'
      - 'dev*'

  pull_request:
    # execution when pull request is requested by a developer (e.g to reviewer) on his development branch or another branch
    types: [opened, reopened]
    branches:
      - 'feature*'
      - 'hotfix*'
      - 'fix*'
      - 'dev*'
      - 'staging*'
      - 'integration*'

    # when changes detected on files or java sub-projects
    paths:
      - '**pom.xml'
      - 'implementations-line/**'
      - 'systems-line/**'

jobs:
  build_and_verify_packages:
    name: Build and verify java packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      #packages: write
      pull-requests: write
      #deployments: write

    steps:
      - name : Identify the branch of java project to build with Maven
        run: echo "The branch to build is ${{ inputs.branch_name }}"

      # Patch of workflow regarding save-state and set-output commands when not defined by user environment variable file
      #- name: Save state
      #  run: echo "{name}={value}" >> $GITHUB_STATE
      #- name: Set output
      #  run: echo "{name}={value}" >> $GITHUB_OUTPUT

      - name: Checkout source codes from origin branch
        id: checkout_step
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          token: ${{ github.token }}
          ref: ${{ inputs.branch_name }}

      - name: Set up java version for build (Temurin JDK)
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          # defined settings.xml values allowing Maven remote repository use
          server-id: space-cybnity-open-source
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name:  Verify the java packages quality (phases validate, compile, test, package, verify)
        # set the MAVEN_RESULT environment variable to the value of the mvn command output text
        run: mvn --batch-mode --update-snapshots --show-version --fail-fast --file pom.xml clean verify
        env:
            MAVEN_USERNAME: ${{ secrets.SPACE_CYBNITY_OS_REPO_USERNAME }}
            MAVEN_PASSWORD: ${{ secrets.SPACE_CYBNITY_OS_REPO_PASSWORD }}

  call-workflow-in-local-repo:
      needs: [build_and_verify_packages]
      name: Publish artifacts to remote repository
      if: ${{ success() }}
      uses: ./.github/workflows/publish-java-packages-version-to-repository.yml
      with:
        config-path: ${{ needs.build_and_verify_packages.steps.checkout_step.ref }}
        #config-path: ${{ inputs.branch_name }}
      secrets: inherit
