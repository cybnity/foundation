# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Software components commit stage

run-name: Foundation Java Project Backup

on:
  push:
    branches: [ "main" ]

jobs:
  java_build:
    name: Java artefacts publishing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
      deployments: write

    steps:
    # Patch of workflow regarding save-state and set-output commands when not defined by user environment variable file
    - name: Save state
      run: echo "{name}={value}" >> $GITHUB_STATE
    - name: Set output
      run: echo "{name}={value}" >> $GITHUB_OUTPUT

    - name: Checkout source codes from MAIN branch
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository }}
        token: ${{ github.token }}
        ref: main

    - name: Set up Temurin JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        server-id: space-cybnity-open-source
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Build, verify and install artifacts into local repository
      run: mvn --batch-mode clean install -U --file pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.SPACE_CYBNITY_OS_REPO_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SPACE_CYBNITY_OS_REPO_PASSWORD }}

    # Optional: Uploads the full dependency graph to GitHub (output variable) to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Publish artefacts into remote repository
      run: echo "REMOTE INSTALLATION"
    - name: Publish artifacts to CYBNITY Open Source remote repository
      run: mvn --batch-mode deploy --file pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.SPACE_CYBNITY_OS_REPO_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SPACE_CYBNITY_OS_REPO_PASSWORD }}
  #artefact_publish:
  #  if: ${{ always() }}
  #  needs: java_build
  #  name: Java artefacts publish
  #  runs-on: ubuntu-latest
  #  permissions:
  #    contents: read
 #   deployments: write
 #   steps:
