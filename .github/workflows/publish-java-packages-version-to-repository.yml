
name: Java Project COMMIT STAGE

run-name: Build & publish java packages

on:
  workflow_call:
    inputs:
      config-path:
        required: true
        type: string

  push:
    # execute only when changes detected on files or java sub-projects contents
    paths:
      - '.github/workflows/**'

jobs:
  build_and_deploy_packages:
    name: Build and deploy packages to remote repository
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout source codes from branch
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository }}
        token: ${{ github.token }}
        ref: ${{ inputs.config-path }}

    - name: Set up Java for publishing to CYBNITY Maven Repository
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        server-id: space-cybnity-open-source
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: GitHub Environment Variables Action
      uses: FranzDiebold/github-env-vars-action@v2.7.0

    - name: Define an unique revision name (pattern <<feature branch name>>.<<commit id abbrev>>.<<commit time>>)
      run: |
          echo "Git commit revision $CI_SHA_SHORT abbreviation based on 7 characters (default) maximum (origin based: $CI_SHA)"
          echo "commit_id=$CI_SHA_SHORT" >> $GITHUB_ENV
          echo "Redefined pre-release revision as ${{ env.commit_id }}"
          echo "version_name=1.0.0" >> $GITHUB_ENV
          echo "feature_name=$CI_ACTION_REF_NAME_SLUG" >> $GITHUB_ENV

    - name: Define the final version identifier aligned with versioning strategy (<<version name>>-<<feature name>>.<<commit_id>>)
      run: |
          echo "current_artifacts_revision_id=${{ env.version_name }}-${{ env.feature_name }}.${{ env.commit_id }}" >> $GITHUB_ENV
    
    - name: Prepare the Maven project customized version to publish
      run: |
          echo "Set the project artifacts version"
          echo "mvn versions:set -DnewVersion=${{ env.current_artifacts_revision_id }} -B -DgenerateBackupPoms=true -DprocessAllModules=true"
          echo "Build the project technical documentation web site (generated via Maven) and the Java documentations (libraries javadoc, unit tests javadoc) with an aggregated vision and included into the project website"
          echo "mvn site site:stage -Drevision=${{ env.current_artifacts_revision_id }} -B -DskipTests"

    - name: Publish version of java packages to remote CYBNITY repository via Maven (phases validate, compile, test, package, verify, install, deploy)
      run: mvn --batch-mode --update-snapshots --show-version --file pom.xml --Drevision=${{ env.current_artifacts_revision_id }} deploy
      env:
          MAVEN_USERNAME: ${{ secrets.SPACE_CYBNITY_OS_REPO_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SPACE_CYBNITY_OS_REPO_PASSWORD }}

    # Optional: Uploads the full dependency graph to GitHub (output variable) to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
