
name: Java Project COMMIT STAGE

run-name: Build & publish java packages

on:
  workflow_call:
    inputs:
      config-path:
        required: true
        type: string

  push:
    # execute only when changes detected on files or java sub-projects contents
    paths:
      - '.github/workflows/**'

jobs:
  build_and_deploy_packages:
    name: Build and deploy packages to remote repository
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout source codes from branch
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository }}
        token: ${{ github.token }}
        ref: ${{ inputs.config-path }}

    - name: Set up Java for publishing to CYBNITY Maven Repository
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        server-id: space-cybnity-open-source
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Output Run ID
      run: echo ${{ github.run_id }}

    - name: Output Run Number
      run: echo ${{ github.run_number }}

    - name: Output Run Attempt
      run: echo ${{ github.run_attempt }}

    - name: Define an unique revision name (pattern <<feature branch name>>.<<commit id abbrev>>.<<commit time>>)
      run: |
          echo "read git commit revision abbreviation based on 7 characters (default) maximum"
          git rev-parse --short ${{ inputs.branch_name }}

    - name : Shortify Git Revision
        # You may pin to the exact commit or the version.
        # uses: rlespinasse/shortify-git-revision@c90ba7007ef6c152254d10b9f1a327966ab13077
      uses: rlespinasse/shortify-git-revision@v1.6.0
      with:
        # Environment variable that will hold the value and serve as prefix to shortify value
        # Read branch name of feature since origin/feature/<branch name>
        name: ${{ inputs.branch_name }}
        # Revision to short
        #revision: # optional
        # Don't fail the action if the git revision isn't valid
        #continue-on-error: # optional, default is false
        # Still short it if the git revision isn't valid
        #short-on-error: # optional, default is false
        # Value to prepend to each generated variable
        #prefix: # optional, default is
        # Value to configure the length of the shorted sha
        #length: # optional, default is
        # Publish short as environment variable
        #publish-env: # optional, default is true

    - name: Publish version of java packages to remote CYBNITY repository via Maven (phases validate, compile, test, package, verify, install, deploy)
      run: mvn --batch-mode --update-snapshots --show-version --file pom.xml deploy
      env:
          MAVEN_USERNAME: ${{ secrets.SPACE_CYBNITY_OS_REPO_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SPACE_CYBNITY_OS_REPO_PASSWORD }}

    # Optional: Uploads the full dependency graph to GitHub (output variable) to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
