# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java artifacts COMMIT STAGE

run-name: Build & publish java packages to CYBNITY remote Maven repository

on:
  push:
    branches: [ "staging" ]

jobs:
  java_build:
    name: Java components COMMIT STAGE
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      #pull-requests: write
      #deployments: write

    steps:
    # Patch of workflow regarding save-state and set-output commands when not defined by user environment variable file
    - name: Save state
      run: echo "{name}={value}" >> $GITHUB_STATE
    - name: Set output
      run: echo "{name}={value}" >> $GITHUB_OUTPUT

    - name: Checkout source codes from STAGING branch
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository }}
        token: ${{ github.token }}
        ref: staging

    - name: Set up Java for publishing to CYBNITY Maven Repository
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        server-id: space-cybnity-open-source
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Publish staging version of java components to remote CYBNITY repository via Maven (phases validate, compile, test, package, verify, install, deploy)
      run: mvn --batch-mode --update-snapshots --show-version --file pom.xml deploy
      env:
          MAVEN_USERNAME: ${{ secrets.SPACE_CYBNITY_OS_REPO_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SPACE_CYBNITY_OS_REPO_PASSWORD }}

    - name: Set up Java for publishing to GitHub Packages
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Publish staging version of java components to GitHub Packages
      run: mvn --batch-mode --update-snapshots --file pom.xml deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # Optional: Uploads the full dependency graph to GitHub (output variable) to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
