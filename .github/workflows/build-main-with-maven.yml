# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Foundation modules build with Maven

run-name: Foundation components build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
      deployments: write
      
    steps:
    # Patch of workflow regarding save-state and set-output commands when nto defined by user environment variable file
    - name: Save state
      run: echo "{name}={value}" >> $GITHUB_STATE
    - name: Set output
      run: echo "{name}={value}" >> $GITHUB_OUTPUT
      
    - name: Checkout MAIN branch's source codes
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository }}
        token: ${{ github.token }}
        ref: main
        
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    #- name: Build project component with Maven
    #  run: mvn --batch-mode -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub (output variable) to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Buil, package and publish to GitHub Packages
      run: mvn --batch-mode deploy --file pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
